/*
 * MDES for Merchants
 * The MDES APIs are designed as RPC style stateless web services where each API endpoint represents an operation to be performed.  All request and response payloads are sent in the JSON (JavaScript Object Notation) data-interchange format. Each endpoint in the API specifies the HTTP Method used to access it. All strings in request and response objects are to be UTF-8 encoded.  Each API URI includes the major and minor version of API that it conforms to.  This will allow multiple concurrent versions of the API to be deployed simultaneously. <br> __Authentication__ Mastercard uses OAuth 1.0a with body hash extension for authenticating the API clients. This requires every request that you send to  Mastercard to be signed with an RSA private key. A private-public RSA key pair must be generated consisting of: <br> 1 . A private key for the OAuth signature for API requests. It is recommended to keep the private key in a password-protected or hardware keystore. <br> 2. A public key is shared with Mastercard during the project setup process through either a certificate signing request (CSR) or the API Key Generator. Mastercard will use the public key to verify the OAuth signature that is provided on every API call.<br>  An OAUTH1.0a signer library is available on [GitHub](https://github.com/Mastercard/oauth1-signer-java) <br>  __Encryption__<br>  All communications between Issuer web service and the Mastercard gateway is encrypted using TLS. <br> __Additional Encryption of Sensitive Data__ In addition to the OAuth authentication, when using MDES Digital Enablement Service, any PCI sensitive and all account holder Personally Identifiable Information (PII) data must be encrypted. This requirement applies to the API fields containing encryptedData. Sensitive data is encrypted using a symmetric session (one-time-use) key. The symmetric session key is then wrapped with an RSA Public Key supplied by Mastercard during API setup phase (the Customer Encryption Key). <br>  Java Client Encryption Library available on [GitHub](https://github.com/Mastercard/client-encryption-java) 
 *
 * OpenAPI spec version: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.veritran.token_services.digital_enablement.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import net.veritran.token_services.digital_enablement.model.AccountHolderData;
import net.veritran.token_services.digital_enablement.model.CardAccountDataInbound;

/**
 * FundingAccountData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-20T14:45:14.955-03:00")


public class FundingAccountData {
  @JsonProperty("cardAccountData")
  private CardAccountDataInbound cardAccountData = null;

  @JsonProperty("accountHolderData")
  private AccountHolderData accountHolderData = null;

  @JsonProperty("source")
  private String source = null;

  public FundingAccountData cardAccountData(CardAccountDataInbound cardAccountData) {
    this.cardAccountData = cardAccountData;
    return this;
  }

   /**
   * Get cardAccountData
   * @return cardAccountData
  **/
  @ApiModelProperty(value = "")
  public CardAccountDataInbound getCardAccountData() {
    return cardAccountData;
  }

  public void setCardAccountData(CardAccountDataInbound cardAccountData) {
    this.cardAccountData = cardAccountData;
  }

  public FundingAccountData accountHolderData(AccountHolderData accountHolderData) {
    this.accountHolderData = accountHolderData;
    return this;
  }

   /**
   * Get accountHolderData
   * @return accountHolderData
  **/
  @ApiModelProperty(value = "")
  public AccountHolderData getAccountHolderData() {
    return accountHolderData;
  }

  public void setAccountHolderData(AccountHolderData accountHolderData) {
    this.accountHolderData = accountHolderData;
  }

  public FundingAccountData source(String source) {
    this.source = source;
    return this;
  }

   /**
   * (__Required as minimum for Tokenization__)  The source of the account. Must be one of   * ACCOUNT_ON_FILE   * ACCOUNT_ADDED_MANUALLY   * ACCOUNT_ADDED_VIA_APPLICATION  __Max Length:32__ 
   * @return source
  **/
  @ApiModelProperty(example = "ACCOUNT_ON_FILE", value = "(__Required as minimum for Tokenization__)  The source of the account. Must be one of   * ACCOUNT_ON_FILE   * ACCOUNT_ADDED_MANUALLY   * ACCOUNT_ADDED_VIA_APPLICATION  __Max Length:32__ ")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FundingAccountData fundingAccountData = (FundingAccountData) o;
    return Objects.equals(this.cardAccountData, fundingAccountData.cardAccountData) &&
        Objects.equals(this.accountHolderData, fundingAccountData.accountHolderData) &&
        Objects.equals(this.source, fundingAccountData.source);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardAccountData, accountHolderData, source);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FundingAccountData {\n");
    
    sb.append("    cardAccountData: ").append(toIndentedString(cardAccountData)).append("\n");
    sb.append("    accountHolderData: ").append(toIndentedString(accountHolderData)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

